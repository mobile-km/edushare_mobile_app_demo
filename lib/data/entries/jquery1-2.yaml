- title: Ajax
  desc: jQuery 封装的关于异步请求的一些方法
  entries:
    - title: jQuery.ajax()
      desc: $.ajax()函数所有的基础jQuery的Ajax请求发送。它往往不是必须的，直接调用这个函数，几个高层次的替代品如$.get()和.load()可用，更容易使用，如果不常见的选项是必需的，不过， $.ajax()可以使用更灵活。在简单地说， $.ajax()函数可以不带参数调用。
    - title: .ajaxComplete()
      desc: 无论哪一个Ajax请求被完成，所有ajaxComplete处理器都将被执行。如果我们必须区分的请求,我们可以使参数传递给这个处理器。 他是通过事件对象、 XMLHttpRequest 对象和设置对象中使用的请求，做每一次ajaxComplete 处理器执行的。 举个例子,我们能限制我们的回调到只处理事件处理某一特定的URL。
    - title: .ajaxError()
      desc: 无论哪一个Ajax请求被完成，所有ajaxError处理器都将被执行。如果我们必须区分的请求,我们可以使参数传递给这个处理器。 他是通过事件对象、 XMLHttpRequest 对象和设置对象中使用的请求，每次ajaxError 处理器执行，它传递事件对象，jqXHR对象（在 jQuery 1.5之前是XHR对象），和用来创建请求的设置（settings）对象。如果请求失败，因为JavaScript引发了一个异常，  作为第四个参数的异常对象被传递给处理程序。 举个例子,我们能限制我们的回调到只处理事件处理某一特定的URL。
    - title: .ajaxSend()
      desc: 无论哪一个Ajax请求被发送，所有ajaxSend处理器都将被执行。 如果我们必须区分的请求,我们可以使参数传递给这个处理器。 每次ajaxSend 处理器执行，它传递事件对象，jqXHR对象（在 jQuery 1.4中是XHR对象），和用来创建请求的设置（settings object）对象。如果请求失败，因为JavaScript引发了一个异常，  作为第四个参数的异常对象被传递给处理程序。 举个例子,我们能限制我们的回调到只处理事件处理某一特定的URL。
    - title: .ajaxStart()
      desc: .ajaxStart() 方法在 AJAX 请求发送前执行函数。它是一个 Ajax 事件。无论在何时发送 Ajax 请求，jQuery 都会检查是否存在其他 Ajax 请求。如果不存在，则 jQuery 会触发该 ajaxStart 事件。在此时，由 .ajaxStart() 方法注册的任何函数都会被执行。

    - title: .ajaxStop()
      desc: .ajaxStop() 方法在 AJAX 请求结束时执行函数。它是一个 Ajax 事件。无论 Ajax 请求在何时完成 ，jQuery 都会检查是否存在其他 Ajax 请求。如果不存在，则 jQuery 会触发该 ajaxStop 事件。在此时，由 .ajaxStop() 方法注册的任何函数都会被执行。
    - title: .ajaxSuccess()
      desc: ajaxSuccess() 方法在 AJAX 请求成功时执行函数。它是一个 Ajax 事件。,XMLHttpRequest 对象和设置作为参数传递给回调函数。 无论 Ajax 请求在何时成功完成 ，jQuery 都会触发该 ajaxSuccess 事件。在此时，由 .ajaxSuccess() 方法注册的任何函数都会被执行。
    - title: jQuery.ajaxPrefilter()
      desc: 一个可选的字符串，其中包含一个或多个空格分隔的数据类型。 一个处理程序设置 未来的Ajax请求的默认值。options 是请求的选项 originalOptions 值作为提供给Ajax方法的选项，未经修改的， 因此， ajaxSettings没有默认值jqXHR 是请求的jqXHR对象
    - title: jQuery.ajaxSetup()
      desc: 一个用来配置默认Ajax请求的{键-值}对，所有的选项都是可选的。用于设置$.ajaxSetup()的详细参数, 参见 $.ajax(). 所有后面的 Ajax 调用任何函数都将使用新的设置参数,除非被特别的请求, 直到下一次调用$.ajaxSetup().全局回调函数应使用他们各自的全局Ajax事件处理方法-.ajaxStart(), .ajaxStop(), .ajaxComplete(), .ajaxError(), .ajaxSuccess(), .ajaxSend()-设置，而不是为 $.ajaxSetup() 设置 options 对象。
    - title: jQuery.ajaxTransport()
      desc: 一个处理程序，使用第一个参数中提供的数据类型返回新的传输（transport）对象传输（transport）是一个对象，它提供了两种方法，send 和 abort，内部使用的 由$.ajax()发出请求。传输（transport）是最高级的方法用来增强$.ajax()并且应仅作为当预过滤器（prefilters）和转换器（converters）无法满足你的需求的时候的最后的手段 。由于每个请求需要有自己的传输（transport）对象实例，运输不能直接注册。  因此，你应该提供一个函数返回传输（transport）代替。
    - title: jQuery.get()
      desc: 使用一个HTTP GET请求从服务器加载数据。
    - title: jQuery.getJSON()
      desc: 使用一个HTTP GET请求从服务器加载JSON编码数据。
    - title: jQuery.getScript()
      desc: 使用一个HTTP GET请求从服务器加载并执行一个 JavaScript 文件
    - title: jQuery.param()
      desc: 创建一个序列化的数组或对象，适用于一个URL 地址查询字符串或Ajax请求。
    - title: jQuery.post()
      desc: 通过服务器HTTP POST请求加载数据。
    - title: .load()
      desc: 从服务器载入数据并且将返回的 HTML 代码并插入至 匹配的元素 中。
    - title: .serialize()
      desc: 将用作提交的表单元素的值编译成字符串。
    - title: .serializeArray()
      desc: 将用作提交的表单元素的值编译成拥有name和value对象组成的数组。
- title: 属性(Attributes)
  desc: jQuery 封装的DOM的属性的读和写方法
  entries:
    - title: .addClass()
      desc: 为每个匹配的元素添加指定的样式类名
    - title: .attr()
      desc: 获取匹配的元素集合中的第一个元素的属性的值 或 设置每一个匹配元素的一个或多个属性。
    - title: .hasClass()
      desc: 确定任何一个匹配元素是否有被分配给定的（样式）类。
    - title: .html()
      desc: 从集合的第一个匹配元素中获取HTML内容 或 设置每一个匹配元素的html内容。
    - title: .prop()
      desc: 获取匹配的元素集中的第一个元素的属性（property）值或设置每一个匹配元素的一个或多个属性。
    - title: .removeAttr()
      desc: 为匹配的元素集合中的每个元素中移除一个属性。
    - title: .removeClass()
      desc: 移除集合中每个匹配元素上一个，多个或全部样式。
    - title: .removeProp()
      desc: 为集合中匹配的元素删除一个属性（property）。
    - title: .toggleClass()
      desc: "在匹配的元素集合中的每个元素上添加或删除一个或多个样式类,取决于这个样式类是否存在或价值切换属性。即：如果存在（不存在）就删除（添加）一个类。"
    - title: .val()
      desc: 获取匹配的元素集合中第一个元素的当前值或设置匹配的元素集合中每个元素的值。
